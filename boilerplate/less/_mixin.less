.clearfix {
    display: block;
    *zoom: 1;
  	&:after {
        display: block;
        visibility: hidden;
        font-size: 0;
        height: 0;
        clear: both;
        content: ".";
  	}
}

.inline-block {
    display: inline-block;
    *display: inline;
    *zoom: 1;
}

.box-shadow (@x: 0, @y: 0, @blur: 25px, @color: rgba(0,0,0,.20)) {
    box-shadow: @x @y @blur @color;
}

.box-shadow-inset (@x: 0, @y: 0, @blur: 25px, @color: rgba(0,0,0,.20)) {
    box-shadow: inset @x @y @blur @color;
}

.text-shadow (@x: 0, @y: 0, @blur: 5px, @color: rgba(0,0,0,.20)) {
    text-shadow: @x @y @blur @color;
}

.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
    border-top-right-radius: @topright;
    border-bottom-right-radius: @bottomright;
    border-bottom-left-radius: @bottomleft;
    border-top-left-radius: @topleft;
    background-clip: padding-box;
}

.border-radius(@radius: 5px) {
    border-radius: @radius;
    background-clip: padding-box;
}

.gradient(@color: #F5F5F5, @start: #FFFFFF, @stop: #EEEEEE) {
    background: @color;
    background: -webkit-gradient(linear, left top, left bottom, from(@start), to(@stop));
    background: -ms-linear-gradient(top, @start, @stop);
    background: -moz-linear-gradient(top, @start 0%, @stop 100%);
}

.opacity(@opacity: 0.25) {
    opacity: @opacity;

    // opacity=(@opacity*100))でコンパイルエラーが起きるため変数追加
    @ms-opacity: @opacity*100;
    filter: alpha(opacity=@ms-opacity);
}

.ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

.transition(@duration:0.2s, @ease:ease-out) {
    transition: all @duration @ease;
}

.transition-duration(@duration: 0.2s) {
    transition-duration: @duration;
}

.rotation(@deg:5deg){
    transform: rotate(@deg);
}

.scale(@ratio:1.5){
    transform:scale(@ratio);
}

.translate(@x:0, @y:0) {
    transform: translate(@x, @y);
}
